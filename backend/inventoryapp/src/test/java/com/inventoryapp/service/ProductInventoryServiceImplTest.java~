package com.inventoryapp.service;

import com.inventoryapp.dto.InventoryDto;
import com.inventoryapp.entities.Product;
import com.inventoryapp.repositories.ProductRepository;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import static org.mockito.Mockito.*;

class ProductInventoryServiceImplTest {
    @Mock
    ProductRepository productRepository;
    @InjectMocks
    ProductInventoryServiceImpl productInventoryServiceImpl;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    void testGetById() {
        when(productRepository.findById(any(ID.class))).thenReturn(null);

        Product result = productInventoryServiceImpl.getById("id");
        Assertions.assertEquals(new Product("id", "name", "description", Integer.valueOf(0), Double.valueOf(0), "imageUrl", Float.valueOf(1.1f)), result);
    }

    @Test
    void testUpdateStock() {
        when(productRepository.save(any(S.class))).thenReturn(new S());
        when(productRepository.findById(any(ID.class))).thenReturn(null);

        InventoryDto result = productInventoryServiceImpl.updateStock("id", Integer.valueOf(0), Integer.valueOf(0));
        Assertions.assertEquals(new InventoryDto(true, "message", Integer.valueOf(0)), result);
    }

    @Test
    void testGetStock() {
        when(productRepository.findById(any(ID.class))).thenReturn(null);

        InventoryDto result = productInventoryServiceImpl.getStock("id");
        Assertions.assertEquals(new InventoryDto(true, "message", Integer.valueOf(0)), result);
    }
}

//Generated with love by TestMe :) Please raise issues & feature requests at: https://weirddev.com/forum#!/testme